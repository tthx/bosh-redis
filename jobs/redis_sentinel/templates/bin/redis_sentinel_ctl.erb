#!/bin/bash
<%
  sentinel_master=link('redis_sentinel_conn')
  if_link('sentinel_master_conn'){ |x| sentinel_master=x }
%>
REDIS_HOME="/var/vcap/packages/redis";
REDIS_SERVER="${REDIS_HOME}/bin/redis-server";
REDIS_CLI="${REDIS_HOME}/bin/redis-cli";
REDIS_SENTINEL_RUN_DIR="<%= p('run_dir') %>";
REDIS_SENTINEL_LOG_DIR="<%= p('log_dir') %>";
REDIS_SENTINEL_LOG_FILE="${REDIS_SENTINEL_LOG_DIR}/<%= p('logfile') %>";
REDIS_SENTINEL_STORE_DIR="<%= p('dir') %>";
REDIS_SENTINEL_PID_FILE="${REDIS_SENTINEL_RUN_DIR}/<%= p('pidfile') %>";
REDIS_SENTINEL_CONF="/var/vcap/jobs/redis_sentinel/config/redis_sentinel.conf";

REDIS_SENTINEL_IP="127.0.0.1";
<% if sentinel_master.p('bind') %>
REDIS_SENTINEL_IP="<%= spec.ip %>";
<% end %>
REDIS_SENTINEL_PORT="<%= sentinel_master.p('port') %>";

REDIS_SENTINEL_PASSWORD="";
<%
  sentinel_master.if_p('password') do |password|
    unless password.to_s.empty? %>
REDIS_SENTINEL_PASSWORD="-a <%= password %>";
<%  end
  end
%>

REDIS_SENTINEL_SHUTDOWN="SHUTDOWN";

case "${1}" in
  start)
    mkdir -p \
      "${REDIS_SENTINEL_RUN_DIR}" \
      "${REDIS_SENTINEL_LOG_DIR}" \
      "${REDIS_SENTINEL_STORE_DIR}";

    chown vcap:vcap \
      "${REDIS_SENTINEL_RUN_DIR}" \
      "${REDIS_SENTINEL_LOG_DIR}" \
      "${REDIS_SENTINEL_STORE_DIR}";

    chmod 750 "${REDIS_SENTINEL_STORE_DIR}";
    touch "${REDIS_SENTINEL_LOG_FILE}";
    chown vcap:vcap "${REDIS_SENTINEL_LOG_FILE}";
    chmod 660 "${REDIS_SENTINEL_CONF}";

    # Remove temp backup files that might be left over because of a
    # previously aborted
    rm -f "${REDIS_SENTINEL_STORE_DIR}"/*

    ulimit -n 10032

    if [[ -f "${REDIS_SENTINEL_PID_FILE}" ]];
    then
      echo "${REDIS_SENTINEL_PID_FILE} exists, process is already running or crashed";
    else
      echo "Starting Redis Sentinel...";
      exec chpst -u vcap:vcap "${REDIS_SERVER}" \
        "${REDIS_SENTINEL_CONF}" \
        --sentinel \
        >> "${REDIS_SENTINEL_LOG_FILE}" 2>&1;
    fi
    ;;
  stop)
    if [[ -f "${REDIS_SENTINEL_PID_FILE}" ]];
    then
      redis_sentinel_pid="$(cat ${REDIS_SENTINEL_PID_FILE})";
      echo "Stopping ...";
      exec chpst -u vcap:vcap \
        "${REDIS_CLI}" \
          -h "${REDIS_SENTINEL_IP}" \
          -p "${REDIS_SENTINEL_PORT}" \
          ${REDIS_SENTINEL_PASSWORD} \
          ${REDIS_SENTINEL_SHUTDOWN};
      while [[ -x "/proc/${redis_sentinel_pid}" ]];
      do
        echo "Waiting for Redis Sentinel to shutdown ...";
        sleep 1;
      done
      rm -f "${REDIS_SENTINEL_PID_FILE}"
      echo "Redis Sentinel stopped";
    else
      echo "${REDIS_SENTINEL_PID_FILE} does not exist, process is not running";
    fi
    ;;
  *)
    echo "Usage: ${0} {start|stop}";
  ;;
esac
