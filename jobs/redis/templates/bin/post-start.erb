#!/bin/bash
<%- master=link('redis_conn')
  sentinel=nil
  if_link('redis_sentinel_conn'){ |x| sentinel=x }
  sentinel_slave=nil
  if_link('sentinel_slave_conn'){ |x| sentinel_slave=x } -%>

ERR=0;
CLI="/var/vcap/packages/redis/bin/redis-cli";

REDIS_IP="127.0.0.1";
<%- if master.p('bind') -%>
REDIS_IP="<%= spec.ip %>";
<%- end -%>
REDIS_PORT="<%= master.p('port') %>";
REDIS_CRED="--user <%= master.p('admin_user') %>";
<%- master.if_p('admin_password') do |x|
    unless x.to_s.empty? -%>
REDIS_CRED+=" --pass <%= x %>";
<%- end
  end
  if master.p('tls') -%>
REDIS_PORT="<%= master.p('tls_port') %>";
TLS_KEYS_DIR="<%= p('tls_keys_dir') %>";
TLS_CERT_FILE="${TLS_KEYS_DIR}/<%= p('tls_cert_file') %>";
REDIS_CRED+=" --tls --cert ${TLS_CERT_FILE}";
TLS_KEY_FILE="${TLS_KEYS_DIR}/<%= p('tls_key_file') %>";
REDIS_CRED+=" --key ${TLS_KEY_FILE}";
TLS_CA_CERT_FILE="${TLS_KEYS_DIR}/<%= p('tls_ca_cert_file') %>";
REDIS_CRED+=" --cacert ${TLS_CA_CERT_FILE}";
<%- end -%>

<%- if !sentinel.nil? && master.p('replication') -%>
SENTINEL_PORT="<%= sentinel.p('port') %>";
SENTINEL_CRED="";
<%- sentinel.if_p('password') do |x|
    unless x.to_s.empty? -%>
SENTINEL_CRED="-a <%= x %>";
<%- end
  end 
  if sentinel.p('tls') -%>
SENTINEL_PORT="<%= sentinel.p('tls_port') %>";
SENTINEL_CRED+=" --tls --cert ${TLS_CERT_FILE}";
SENTINEL_CRED+=" --key ${TLS_KEY_FILE}";
SENTINEL_CRED+=" --cacert ${TLS_CA_CERT_FILE}";
<%- end
  sentinel_addresses=''
  sentinel.instances.each{ |x| sentinel_addresses.concat(x.address).concat(' ') }
  if !sentinel_slave.nil?
    sentinel_slave.instances.each{ |x| sentinel_addresses.concat(x.address).concat(' ') }
  end -%>
SENTINEL_ADDRESSES="<%= sentinel_addresses %>";
for x in ${SENTINEL_ADDRESSES};
do
  MSG="$("${CLI}" \
    -h "${x}" \
    -p "${SENTINEL_PORT}" \
    ${SENTINEL_CRED} \
    SENTINEL GET-MASTER-ADDR-BY-NAME <%= spec.deployment %>)";
  if [[ ${?} -eq 0 ]];
  then
    ERR=1;
    echo "ERROR: Commands failed with Sentinel \"${x}\": \"${MSG}\".";
    break;
  fi
done

x="$("${CLI}" \
  -h ${IP} \
  -p ${PORT} \
  ${CRED} \
  ROLE)";
if [[ ${?} -eq 0 ]];
then
  if [[ "slave" == "$(echo -e "${x}"|grep "slave")" ]];
  then
    connected=0;
    while [[ ${connected} -eq 0 ]] || [[ ${ERR} -eq 0 ]];
    do
      x="$("${CLI}" \
        -h ${IP} \
        -p ${PORT} \
        ${CRED} \
        ROLE)";
      if [[ ${?} -eq 0 ]]; 
      then
        if [[ "connected" == "$(echo -e "${x}"|grep "connected")" ]];
        then
          connected=1;
          echo "Redis replica [${IP}:${PORT}] is connected";
        fi
      else
        ERR=1;
      fi
    done
  fi
else
  ERR=1;
fi
<%- end -%>

exit ${ERR};
