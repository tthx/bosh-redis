#!/usr/bin/env bash
<%- master=link('redis_conn') -%>
  
set -eu

PROGNAME="redis_exporter";
RUN_DIR="/var/vcap/sys/run/${PROGNAME}";
LOG_DIR="/var/vcap/sys/log/${PROGNAME}";
TMP_DIR="/var/vcap/sys/tmp/${PROGNAME}";
STORE_DIR="/var/vcap/sys/store/${PROGNAME}";
PID_FILE="${RUN_DIR}/${PROGNAME}.pid";
mkdir -p "${RUN_DIR}" "${LOG_DIR}" "${TMP_DIR}" "${STORE_DIR}";
chown vcap:vcap "${RUN_DIR}" "${LOG_DIR}" "${TMP_DIR}" "${STORE_DIR}";

PROTOCOLE="redis";
IP="127.0.0.1";
<%- if master.p('bind') -%>
IP="<%= spec.ip %>";
<%- end -%>
PORT="<%= master.p('port') %>";
ARGS="-redis.user <%= master.p('exporter_user') %>";
<%- master.if_p('exporter_password') do |x|
    unless x.to_s.empty? -%>
ARGS+=" -redis.password <%= x %>";
<%- end
  end
  if master.p('tls') -%>
PROTOCOLE="rediss";
PORT="<%= master.p('tls_port') %>";
TLS_KEYS_DIR="<%= p('tls_keys_dir') %>";
ARGS+=" -tls-client-cert-file ${TLS_KEYS_DIR}/<%= p('tls_cert_file') %>";
ARGS+=" -tls-client-key-file ${TLS_KEYS_DIR}/<%= p('tls_key_file') %>";
ARGS+=" -tls-ca-cert-file ${TLS_KEYS_DIR}/<%= p('tls_ca_cert_file') %>";
<%- end -%>
ARGS+=" -redis.addr=${PROTOCOLE}://${IP}:${PORT}";
<%- if_p('check_keys') do |x| -%>
ARGS+=" -check-keys <%= x %>";
<%- end -%>
<%- if_p('check_single_keys') do |x| -%>
ARGS+=" -check-single-keys <%= x %>";
<%- end -%>
<%- if_p('check_streams') do |x| -%>
ARGS+=" -check-streams <%= x %>";
<%- end -%>
<%- if_p('check_single_streams') do |x| -%>
ARGS+=" -check-single-streams <%= x %>";
<%- end -%>
<%- if_p('config_command') do |x| -%>
ARGS+=" -config-command <%= x %>";
<%- end -%>
ARGS+=" -connection-timeout <%= p('connection_timeout') %>";
<%- if p('debug') -%>
ARGS+=" -debug";
<%- end -%>
<%- if p('export_client_list') -%>
ARGS+=" -export-client-list";
<%- end -%>
<%- if p('include_system_metrics') -%>
ARGS+=" -include-system-metrics";
<%- end -%>
<%- if p('is_tile38') -%>
ARGS+=" -is-tile38";
<%- end -%>
<%- if p('ping_on_connect') -%>
ARGS+=" -ping-on-connect";
<%- end -%>
<%- if p('redis_only_metrics') -%>
ARGS+=" -redis-only-metrics";
<%- end -%>
<%- if p('set_client_name') -%>
ARGS+=" -set-client-name";
<%- end -%>
<%- if p('skip_tls_verification') -%>
ARGS+=" -skip-tls-verification";
<%- end -%>

source "/var/vcap/packages/${PROGNAME}/bin/utils.sh";
exec 1>> "${LOG_DIR}/${PROGNAME}.stdout.log";
exec 2>> "${LOG_DIR}/${PROGNAME}.stderr.log";
chown vcap:vcap \
  "${LOG_DIR}/${PROGNAME}.stdout.log" \
  "${LOG_DIR}/${PROGNAME}.stderr.log";

export PATH="/var/vcap/packages/${PROGNAME}/bin:${PATH}";

case $1 in
  start)
    pid_guard "${PID_FILE}" "${PROGNAME}";
    echo $$ > "${PID_FILE}";

    exec chpst -u vcap:vcap "${PROGNAME}" \
      ${ARGS} \
      -log-format <%= p('log_format') %> \
      -namespace <%= p('namespace') %> \
      -web.listen-address <%= spec.ip+':'+p('web_port') %> \
      -web.telemetry-path <%= p('web_telemetry_path') %> \
      >> "${LOG_DIR}/${PROGNAME}.stdout.log" \
      2>> "${LOG_DIR}/${PROGNAME}.stderr.log";
    ;;

  stop)
    kill_and_wait "${PID_FILE}";
    ;;

  *)
    echo "Usage: $0 {start|stop}";
    exit 1;
    ;;

esac
exit 0;
