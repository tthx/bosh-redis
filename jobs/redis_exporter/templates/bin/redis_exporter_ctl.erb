#!/usr/bin/env bash
<%- master=link('redis_conn') -%>

set -eu

PRG_NAME="redis_exporter";
RUN_DIR="/var/vcap/sys/run/${PRG_NAME}";
LOG_DIR="/var/vcap/sys/log/${PRG_NAME}";
PID_FILE="${RUN_DIR}/${PRG_NAME}.pid";
mkdir -p "${RUN_DIR}" "${LOG_DIR}";
chown vcap:vcap "${RUN_DIR}" "${LOG_DIR}";
export PATH=/var/vcap/packages/${PRG_NAME}/bin:${PATH};

IP="127.0.0.1";
<%- if master.p('bind') -%>
IP="<%= spec.ip %>";
<%- end -%>
ARGS="";
<%- master.if_p('password') do |x|
    unless x.to_s.empty? -%>
ARGS+=" -redis.password <%= x %>";
<%- end
  end -%>
ARGS+=" -redis.addr redis://${IP}:<%= master.p('port') %>";
ARGS+=" -log-format <%= p('log_format') %>";
ARGS+=" -connection-timeout <%= p('connection_timeout') %>";
ARGS+=" -namespace <%= p('namespace') %>";
ARGS+=" -web.listen-address <%= spec.ip + ':' + p('web_port') %>";
ARGS+=" -web.telemetry-path <%= p('web_telemetry_path') %>";
<%- if_p('check_keys') do |x| -%>
ARGS+=" -check-keys <%= x %>";
<%- end -%>
<%- if_p('check_single_keys') do |x| -%>
ARGS+=" -check-single-keys <%= x %>";
<%- end -%>
<%- if_p('check_streams') do |x| -%>
ARGS+=" -check-streams <%= x %>";
<%- end -%>
<%- if_p('check_single_streams') do |x| -%>
ARGS+=" -check-single-streams <%= x %>";
<%- end -%>
<%- if_p('config_command') do |x| -%>
ARGS+=" -config-command <%= x %>";
<%- end -%>
<%- if p('debug') -%>
ARGS+=" -debug";
<%- end -%>
<%- if p('export_client_list') -%>
ARGS+=" -export-client-list";
<%- end -%>
<%- if p('include_system_metrics') -%>
ARGS+=" -include-system-metrics";
<%- end -%>
<%- if p('is_tile38') -%>
ARGS+=" -is-tile38";
<%- end -%>
<%- if p('ping_on_connect') -%>
ARGS+=" -ping-on-connect";
<%- end -%>
<%- if p('redis_only_metrics') -%>
ARGS+=" -redis-only-metrics";
<%- end -%>
<%- if p('set_client_name') -%>
ARGS+=" -set-client-name";
<%- end -%>

source /var/vcap/packages/${PRG_NAME}/bin/utils.sh;
exec 1>> ${LOG_DIR}/${PRG_NAME}.stdout.log;
exec 2>> ${LOG_DIR}/${PRG_NAME}.stderr.log;
chown vcap:vcap \
  ${LOG_DIR}/${PRG_NAME}.stdout.log \
  ${LOG_DIR}/${PRG_NAME}.stderr.log;

case $1 in
  start)
    pid_guard ${PID_FILE} "${PRG_NAME}";
    echo $$ > ${PID_FILE};

    exec chpst -u vcap:vcap ${PRG_NAME} ${ARGS} \
      >>  ${LOG_DIR}/${PRG_NAME}.stdout.log \
      2>> ${LOG_DIR}/${PRG_NAME}.stderr.log;
    ;;

  stop)
    kill_and_wait ${PID_FILE};
    ;;

  *)
    echo "Usage: $0 {start|stop}";
    exit 1;
    ;;

esac
exit 0;
